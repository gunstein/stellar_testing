{"version":3,"sources":["components/OrderForm.js","services/order.js","components/GalleryTitlebarGridList.js","services/art.js","components/Gallery.js","App.js","reportWebVitals.js","index.js"],"names":["FormDialog","handleCloseToParent","tile","useState","emailInput","setEmailInput","handleClose","Dialog","open","onClose","aria-labelledby","DialogTitle","id","title","artist","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","onChange","event","target","value","DialogActions","Button","onClick","color","order","email","artid","fetch","process","method","headers","body","JSON","stringify","then","data","json","order_response","console","log","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","GalleryTitlebarGridList","handleOrder","classes","art","setArt","useEffect","mounted","items","className","GridList","cellHeight","GridListTile","cols","style","ListSubheader","component","map","src","small_file_url","alt","GridListTileBar","subtitle","actionIcon","IconButton","aria-label","handleClickOpen","Gallery","orderMode","setOrderMode","selectedTile","setSelectedTile","Fragment","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbb0436c.chunk.js","sourcesContent":["import React, { useState} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createOrder } from \"../services/order\";\n\nexport default function FormDialog({ handleCloseToParent, tile }) {\n  //const [open, setOpen] = React.useState(false);\n  const [emailInput, setEmailInput] = useState('');\n\n  const handleClose = () => {\n    handleCloseToParent();\n  };\n\n  const handleBuy = () => {\n    createOrder({email:emailInput, artid:tile.artid})\n    .then(order_response => {\n        console.log(order_response) \n    })\n    //handleCloseToParent();\n  };\n\n  return (\n    <Dialog\n      open={true}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        Buy {tile.title} by {tile.artist}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please enter email and press buy. Then paymentinfo will show up. Download info will be sent per email when payment is received.\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Email Address\"\n          type=\"email\"\n          fullWidth\n          onChange={event => setEmailInput(event.target.value)} \n          value={emailInput}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleBuy} color=\"primary\">\n          Buy\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","export function createOrder(order) {\n    return fetch(process.env.REACT_APP_API_URL + \"/order\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ order })\n    })\n      .then(data => data.json())\n   }","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport { getArt } from \"../services/art\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  }\n}));\n\nexport default function GalleryTitlebarGridList({ handleOrder }) {\n  const classes = useStyles();\n  const [art, setArt] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    getArt().then((items) => {\n      if (mounted) {\n        //console.log(items.data)\n        setArt(items.data);\n      }\n    });\n    return () => (mounted = false);\n  }, []);\n\n  const handleClickOpen = (tile) => {\n    handleOrder(tile);\n  };\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\n          <ListSubheader component=\"div\">Gallery</ListSubheader>\n        </GridListTile>\n        {art.map((tile) => (\n          <GridListTile key={tile.small_file_url}>\n            <img src={tile.small_file_url} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.artist}</span>}\n              actionIcon={\n                <IconButton\n                  aria-label={`buy art ${tile.title}`}\n                  className={classes.icon}\n                  onClick={() => handleClickOpen(tile)}\n                >\n                  <ShoppingCartOutlinedIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","export function getArt() {\n    return fetch(process.env.REACT_APP_API_URL + \"/art\").then((data) =>\n      data.json()\n    );\n  }\n  ","import React, { useState } from \"react\";\nimport OrderForm from \"./OrderForm.js\";\nimport GalleryTitlebarGridList from \"./GalleryTitlebarGridList\";\n\nconst Gallery = () => {\n  const [orderMode, setOrderMode] = useState(0);\n  const [selectedTile, setSelectedTile] = useState(null);\n\n  const handleOrder = (tile) => {\n    //console.log(tile);\n    setSelectedTile(tile);\n    setOrderMode(1);\n  };\n\n  const handleCloseOrderDialog = () => {\n    setOrderMode(0);\n  };\n\n  return (\n    <React.Fragment>\n      <GalleryTitlebarGridList\n        handleOrder={handleOrder}\n      ></GalleryTitlebarGridList>\n      {orderMode ? (\n        <OrderForm\n          handleCloseToParent={handleCloseOrderDialog}\n          tile={selectedTile}\n        ></OrderForm>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport Gallery from \"./components/Gallery\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Gallery />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}