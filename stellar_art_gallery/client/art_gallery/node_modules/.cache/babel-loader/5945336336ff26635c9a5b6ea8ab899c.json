{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gunstein/koding/stellar_testing/stellar_art_gallery/client/art_gallery/src/pages/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport { getArt } from \"../services/art\";\nimport { RoutingContext, pagesMapping } from \"../context/RoutingContext\";\nimport selectedTileContext from \"../context/SelectedTileContext\";\nimport GalleryAppBar from \"../components/GalleryAppBar\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 700,\n    height: 800\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  }\n}));\n\nconst Gallery = () => {\n  _s();\n\n  const {\n    setPage\n  } = useContext(RoutingContext); //const [selectedTile, setSelectedTile] = useState(null);\n\n  const classes = useStyles();\n  const [art, setArt] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    getArt().then(items => {\n      if (mounted) {\n        //console.log(items.data)\n        setArt(items.data);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  const {\n    setSelectedTile\n  } = useContext(selectedTileContext);\n\n  const handleClickBuy = tile => {\n    setSelectedTile(tile);\n    setPage(pagesMapping.buy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(GalleryAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: 350,\n      className: classes.gridList,\n      children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n        cols: 2,\n        style: {\n          height: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n          component: \"div\",\n          style: {\n            fontSize: \"50px\"\n          },\n          children: \"StellarGallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, \"Subheader\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), art.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.small_file_url,\n          alt: tile.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: tile.title,\n          subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"by: \", tile.artist]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this),\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": `buy art ${tile.title}`,\n            className: classes.icon,\n            onClick: () => handleClickBuy(tile),\n            children: /*#__PURE__*/_jsxDEV(ShoppingCartOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, tile.small_file_url, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Gallery, \"PkB6fJvbCBv3+hJhCuxglhJT+Fc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/home/gunstein/koding/stellar_testing/stellar_art_gallery/client/art_gallery/src/pages/Gallery.js"],"names":["React","useState","useEffect","useContext","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","ShoppingCartOutlinedIcon","getArt","RoutingContext","pagesMapping","selectedTileContext","GalleryAppBar","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","Gallery","setPage","classes","art","setArt","mounted","then","items","data","setSelectedTile","handleClickBuy","tile","buy","fontSize","map","small_file_url","title","artist"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport { getArt } from \"../services/art\";\nimport { RoutingContext, pagesMapping } from \"../context/RoutingContext\";\nimport selectedTileContext from \"../context/SelectedTileContext\";\nimport GalleryAppBar from \"../components/GalleryAppBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 700,\n    height: 800,\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\",\n  },\n}));\n\nconst Gallery = () => {\n  const { setPage } = useContext(RoutingContext);\n  //const [selectedTile, setSelectedTile] = useState(null);\n\n  const classes = useStyles();\n  const [art, setArt] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    getArt().then((items) => {\n      if (mounted) {\n        //console.log(items.data)\n        setArt(items.data);\n      }\n    });\n    return () => (mounted = false);\n  }, []);\n\n  const { setSelectedTile } = useContext(selectedTileContext);\n\n  const handleClickBuy = (tile) => {\n    setSelectedTile(tile);\n    setPage(pagesMapping.buy);\n  };\n\n  return (\n    <div className={classes.root}>\n      <GalleryAppBar></GalleryAppBar>\n      <GridList cellHeight={350} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\n          <ListSubheader component=\"div\" style={{ fontSize: \"50px\" }}>\n            StellarGallery\n          </ListSubheader>\n        </GridListTile>\n        {art.map((tile) => (\n          <GridListTile key={tile.small_file_url}>\n            <img src={tile.small_file_url} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.artist}</span>}\n              actionIcon={\n                <IconButton\n                  aria-label={`buy art ${tile.title}`}\n                  className={classes.icon}\n                  onClick={() => handleClickBuy(tile)}\n                >\n                  <ShoppingCartOutlinedIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}