{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gunstein/koding/stellar_testing/stellar_art_gallery/client/art_gallery/src/pages/Buy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { RoutingContext, pagesMapping } from \"../context/RoutingContext\";\nimport selectedTileContext from \"../context/SelectedTileContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GalleryAppBar from \"../components/GalleryAppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport { createOrder, getEventSourceSSEReceiveBigImageUrl, getBigFileUrlFromMemoAndDownloadKey } from \"../services/order\";\nimport { createAccount, getAccountBalance, sendPayment } from \"../services/stellar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Fab from \"@material-ui/core/Fab\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Buy = () => {\n  _s();\n\n  const {\n    setPage\n  } = useContext(RoutingContext);\n  const {\n    selectedTile\n  } = useContext(selectedTileContext);\n  const [targetAccount, setTargetAccount] = useState(\"\");\n  const [targetMemo, setTargetMemo] = useState(\"\");\n  const [targetDownloadKey, setTargetDownloadKey] = useState(\"\");\n  const [sourceAccountPublicKey, setSourceAccountPublicKey] = useState(\"\");\n  const [sourceAccountSecret, setSourceAccountSecret] = useState(\"\");\n  const [sourceAccountBalance, setSourceAccountBalance] = useState(0);\n  const [orderMode, setOrderMode] = useState(true);\n  const [createAccountMode, setCreateAccountMode] = useState(false);\n  const [payMode, setPayMode] = useState(false);\n  const [spinnerCreateAccount, setSpinnerCreateAccount] = useState(false);\n  const [sourceKeyPair, setSourceKeyPair] = useState(null);\n  const [bigImageUrl, setBigImageUrl] = useState(\"\");\n  const [receiveBigImageMode, setReceiveBigImageMode] = useState(false);\n  const classes = useStyles();\n  var evSource = null;\n\n  const handleOrder = () => {\n    createOrder({\n      artid: selectedTile.artid\n    }).then(order_response => {\n      console.log(\"order_response: \", order_response);\n\n      if (order_response.hasOwnProperty(\"data\") && order_response.data.hasOwnProperty(\"account\") && order_response.data.hasOwnProperty(\"memo\")) {\n        setTargetAccount(order_response.data.account);\n        setTargetMemo(order_response.data.memo);\n        setTargetDownloadKey(order_response.data.download_key);\n        setOrderMode(false);\n        setCreateAccountMode(true);\n      }\n    });\n  };\n\n  const handleCreateAccount = () => {\n    setSpinnerCreateAccount(true);\n    createAccount().then(account_response => {\n      setSourceKeyPair(account_response);\n      setSourceAccountPublicKey(account_response.publicKey());\n      setSourceAccountSecret(account_response.secret());\n      handleGetAccountBalance(account_response.publicKey());\n      setCreateAccountMode(false);\n      setPayMode(true);\n      setSpinnerCreateAccount(false);\n    });\n  };\n\n  const handleGetAccountBalance = sourceAccountPublicKey => {\n    getAccountBalance(sourceAccountPublicKey).then(account_balance_response => {\n      setSourceAccountBalance(account_balance_response.balance);\n    });\n  };\n\n  const handleReceiveSSEMessage = event => {\n    console.log(\"handleReceiveSSEMessage: \", event);\n\n    if (event.data === targetMemo) {\n      console.log(\"before getBigFileUrlFromMemoAndDownloadKey\");\n      getBigFileUrlFromMemoAndDownloadKey(targetMemo, targetDownloadKey).then(data => {\n        console.log(\"data: \", data.big_file_url);\n        setBigImageUrl(data.big_file_url);\n      });\n    }\n  };\n\n  const handleSSEError = error => {\n    console.error(\"EventSource failed:\", error);\n  };\n\n  const handlePay = () => {\n    setReceiveBigImageMode(true);\n    setPayMode(false);\n    evSource = getEventSourceSSEReceiveBigImageUrl();\n    evSource.onerror = handleSSEError;\n    evSource.addEventListener(\"message\", handleReceiveSSEMessage);\n    sendPayment(sourceKeyPair, targetAccount, targetMemo, selectedTile.price).then();\n  };\n\n  const handleGallery = () => {\n    setPage(pagesMapping.gallery);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GalleryAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.layout,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Buy \", selectedTile.title, \" by \", selectedTile.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"target_account\",\n              name: \"targetAccount\",\n              label: \"Target Account\",\n              fullWidth: true,\n              InputProps: {\n                readOnly: true\n              },\n              value: targetAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"target_memo\",\n              name: \"targetMemo\",\n              label: \"Target Memo\",\n              fullWidth: true,\n              value: targetMemo,\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"target_amount\",\n              name: \"targetAmount\",\n              label: \"Target Amount\",\n              fullWidth: true,\n              value: selectedTile.price,\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"target_downloadkey\",\n              name: \"targetDownloadKey\",\n              label: \"Target DownloadKey\",\n              fullWidth: true,\n              value: targetDownloadKey,\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), orderMode ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.buttons,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button,\n                onClick: handleOrder,\n                children: \"Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this) : null, !orderMode ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"source_account_public_key\",\n                name: \"sourceAccountPublicKey\",\n                label: \"Source Account Public Key\",\n                fullWidth: true,\n                value: sourceAccountPublicKey,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"source_account_secret\",\n                name: \"sourceAccountSecret\",\n                label: \"Source Account Secret\",\n                fullWidth: true,\n                value: sourceAccountSecret,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"source_account_balance\",\n                name: \"sourceAccountBalance\",\n                label: \"Source Account Balance\",\n                fullWidth: true,\n                value: sourceAccountBalance,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this) : null, createAccountMode ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.buttons,\n              children: [spinnerCreateAccount ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 43\n              }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button,\n                onClick: handleCreateAccount,\n                children: \"Create and fund account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this) : null, payMode ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.buttons,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button,\n                onClick: handlePay,\n                children: \"Pay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this) : null, receiveBigImageMode && bigImageUrl !== \"\" ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: bigImageUrl,\n              alt: selectedTile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"Gallery\",\n          onClick: () => handleGallery(),\n          children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Buy, \"tF/LE1cjmSFnlDr/qzEzq3G4scc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Buy;\nexport default Buy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buy\");","map":{"version":3,"sources":["/home/gunstein/koding/stellar_testing/stellar_art_gallery/client/art_gallery/src/pages/Buy.js"],"names":["React","useState","useContext","RoutingContext","pagesMapping","selectedTileContext","makeStyles","Grid","TextField","Paper","Typography","GalleryAppBar","Button","createOrder","getEventSourceSSEReceiveBigImageUrl","getBigFileUrlFromMemoAndDownloadKey","createAccount","getAccountBalance","sendPayment","CircularProgress","HomeIcon","Fab","useStyles","theme","appBar","position","layout","width","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","buttons","display","justifyContent","button","Buy","setPage","selectedTile","targetAccount","setTargetAccount","targetMemo","setTargetMemo","targetDownloadKey","setTargetDownloadKey","sourceAccountPublicKey","setSourceAccountPublicKey","sourceAccountSecret","setSourceAccountSecret","sourceAccountBalance","setSourceAccountBalance","orderMode","setOrderMode","createAccountMode","setCreateAccountMode","payMode","setPayMode","spinnerCreateAccount","setSpinnerCreateAccount","sourceKeyPair","setSourceKeyPair","bigImageUrl","setBigImageUrl","receiveBigImageMode","setReceiveBigImageMode","classes","evSource","handleOrder","artid","then","order_response","console","log","hasOwnProperty","data","account","memo","download_key","handleCreateAccount","account_response","publicKey","secret","handleGetAccountBalance","account_balance_response","balance","handleReceiveSSEMessage","event","big_file_url","handleSSEError","error","handlePay","onerror","addEventListener","price","handleGallery","gallery","title","artist","readOnly"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { RoutingContext, pagesMapping } from \"../context/RoutingContext\";\nimport selectedTileContext from \"../context/SelectedTileContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GalleryAppBar from \"../components/GalleryAppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  createOrder,\n  getEventSourceSSEReceiveBigImageUrl,\n  getBigFileUrlFromMemoAndDownloadKey,\n} from \"../services/order\";\nimport {\n  createAccount,\n  getAccountBalance,\n  sendPayment,\n} from \"../services/stellar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst Buy = () => {\n  const { setPage } = useContext(RoutingContext);\n  const { selectedTile } = useContext(selectedTileContext);\n  const [targetAccount, setTargetAccount] = useState(\"\");\n  const [targetMemo, setTargetMemo] = useState(\"\");\n  const [targetDownloadKey, setTargetDownloadKey] = useState(\"\");\n  const [sourceAccountPublicKey, setSourceAccountPublicKey] = useState(\"\");\n  const [sourceAccountSecret, setSourceAccountSecret] = useState(\"\");\n  const [sourceAccountBalance, setSourceAccountBalance] = useState(0);\n  const [orderMode, setOrderMode] = useState(true);\n  const [createAccountMode, setCreateAccountMode] = useState(false);\n  const [payMode, setPayMode] = useState(false);\n  const [spinnerCreateAccount, setSpinnerCreateAccount] = useState(false);\n  const [sourceKeyPair, setSourceKeyPair] = useState(null);\n  const [bigImageUrl, setBigImageUrl] = useState(\"\");\n  const [receiveBigImageMode, setReceiveBigImageMode] = useState(false);\n\n  const classes = useStyles();\n\n  var evSource = null;\n\n  const handleOrder = () => {\n    createOrder({ artid: selectedTile.artid }).then((order_response) => {\n      console.log(\"order_response: \", order_response);\n      if (\n        order_response.hasOwnProperty(\"data\") &&\n        order_response.data.hasOwnProperty(\"account\") &&\n        order_response.data.hasOwnProperty(\"memo\")\n      ) {\n        setTargetAccount(order_response.data.account);\n        setTargetMemo(order_response.data.memo);\n        setTargetDownloadKey(order_response.data.download_key);\n        setOrderMode(false);\n        setCreateAccountMode(true);\n      }\n    });\n  };\n\n  const handleCreateAccount = () => {\n    setSpinnerCreateAccount(true);\n    createAccount().then((account_response) => {\n      setSourceKeyPair(account_response);\n      setSourceAccountPublicKey(account_response.publicKey());\n      setSourceAccountSecret(account_response.secret());\n      handleGetAccountBalance(account_response.publicKey());\n      setCreateAccountMode(false);\n      setPayMode(true);\n      setSpinnerCreateAccount(false);\n    });\n  };\n\n  const handleGetAccountBalance = (sourceAccountPublicKey) => {\n    getAccountBalance(sourceAccountPublicKey).then(\n      (account_balance_response) => {\n        setSourceAccountBalance(account_balance_response.balance);\n      }\n    );\n  };\n\n  const handleReceiveSSEMessage = (event) => {\n    console.log(\"handleReceiveSSEMessage: \", event);\n    if (event.data === targetMemo) {\n      console.log(\"before getBigFileUrlFromMemoAndDownloadKey\");\n      getBigFileUrlFromMemoAndDownloadKey(targetMemo, targetDownloadKey).then(\n        (data) => {\n          console.log(\"data: \", data.big_file_url);\n          setBigImageUrl(data.big_file_url);\n        }\n      );\n    }\n  };\n\n  const handleSSEError = (error) => {\n    console.error(\"EventSource failed:\", error);\n  };\n\n  const handlePay = () => {\n    setReceiveBigImageMode(true);\n    setPayMode(false);\n    evSource = getEventSourceSSEReceiveBigImageUrl();\n    evSource.onerror = handleSSEError;\n    evSource.addEventListener(\"message\", handleReceiveSSEMessage);\n\n    sendPayment(\n      sourceKeyPair,\n      targetAccount,\n      targetMemo,\n      selectedTile.price\n    ).then();\n  };\n\n  const handleGallery = () => {\n    setPage(pagesMapping.gallery);\n  };\n\n  return (\n    <React.Fragment>\n      <GalleryAppBar></GalleryAppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h6\" gutterBottom>\n            Buy {selectedTile.title} by {selectedTile.artist}\n          </Typography>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                id=\"target_account\"\n                name=\"targetAccount\"\n                label=\"Target Account\"\n                fullWidth\n                InputProps={{\n                  readOnly: true,\n                }}\n                value={targetAccount}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"target_memo\"\n                name=\"targetMemo\"\n                label=\"Target Memo\"\n                fullWidth\n                value={targetMemo}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"target_amount\"\n                name=\"targetAmount\"\n                label=\"Target Amount\"\n                fullWidth\n                value={selectedTile.price}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"target_downloadkey\"\n                name=\"targetDownloadKey\"\n                label=\"Target DownloadKey\"\n                fullWidth\n                value={targetDownloadKey}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            </Grid>\n            {orderMode ? (\n              <Grid item xs={12}>\n                <div className={classes.buttons}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={handleOrder}\n                  >\n                    Order\n                  </Button>\n                </div>\n              </Grid>\n            ) : null}\n            {!orderMode ? (\n              <React.Fragment>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"source_account_public_key\"\n                    name=\"sourceAccountPublicKey\"\n                    label=\"Source Account Public Key\"\n                    fullWidth\n                    value={sourceAccountPublicKey}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"source_account_secret\"\n                    name=\"sourceAccountSecret\"\n                    label=\"Source Account Secret\"\n                    fullWidth\n                    value={sourceAccountSecret}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"source_account_balance\"\n                    name=\"sourceAccountBalance\"\n                    label=\"Source Account Balance\"\n                    fullWidth\n                    value={sourceAccountBalance}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </Grid>\n              </React.Fragment>\n            ) : null}\n            {createAccountMode ? (\n              <Grid item xs={12}>\n                <div className={classes.buttons}>\n                  {spinnerCreateAccount ? <CircularProgress /> : null}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={handleCreateAccount}\n                  >\n                    Create and fund account\n                  </Button>\n                </div>\n              </Grid>\n            ) : null}\n            {payMode ? (\n              <Grid item xs={12}>\n                <div className={classes.buttons}>\n                  {/*spinnerCreateAccount ? <CircularProgress /> : null*/}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={handlePay}\n                  >\n                    Pay\n                  </Button>\n                </div>\n              </Grid>\n            ) : null}\n            {receiveBigImageMode && bigImageUrl !== \"\" ? (\n              <Grid item xs={12}>\n                <img src={bigImageUrl} alt={selectedTile.title} />\n              </Grid>\n            ) : null}\n          </Grid>\n          <Fab\n            color=\"primary\"\n            aria-label=\"Gallery\"\n            onClick={() => handleGallery()}\n          >\n            <HomeIcon />\n          </Fab>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default Buy;\n"]},"metadata":{},"sourceType":"module"}