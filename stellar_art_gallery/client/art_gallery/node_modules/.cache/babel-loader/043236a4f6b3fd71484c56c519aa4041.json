{"ast":null,"code":"export function createOrder(order) {\n  console.log(\"order: \", order);\n  return fetch(process.env.REACT_APP_API_URL + \"/order\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(order)\n  }).then(data => data.json());\n}\nexport function listenSSEReceiveBigImageUrl(memo) {\n  console.log(\"listenSSEReceiveBigImageUrl memo: \", memo);\n  const eventSource = new EventSource(process.env.REACT_APP_API_URL + \"/stream/\" + memo);\n  return eventSource;\n  /*\n  const handleReceiveSSEMessageLocal = (event) => {\n    console.log(\"handleReceiveSSEMessage: \", event);\n    //const eventData = JSON.parse(event.data);\n    //setBigImageUrl(event.data);\n    handleReceiveMessage(event);\n    eventSource.removeEventListener(\"message\", handleReceiveSSEMessageLocal);\n    eventSource.close();\n  };\n  */\n\n  /*\n  eventSource.removeEventListener(\"message\", handleReceiveMessage);\n  eventSource.close();\n  eventSource.addEventListener(\"message\", handleReceiveMessage);\n  */\n\n  /*\n  return () => {\n    // Remove event listener and close the connection on unmount\n    console.log(\"before removeEventListener\");\n    eventSource.removeEventListener(\"message\", handleReceiveMessage);\n    eventSource.close();\n  };\n  */\n}","map":{"version":3,"sources":["/home/gunstein/koding/stellar_testing/stellar_art_gallery/client/art_gallery/src/services/order.js"],"names":["createOrder","order","console","log","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","then","data","json","listenSSEReceiveBigImageUrl","memo","eventSource","EventSource"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,SAAOG,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,QAAjC,EAA2C;AACrDC,IAAAA,MAAM,EAAE,MAD6C;AAErDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF4C;AAKrDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,KAAf;AAL+C,GAA3C,CAAL,CAMJY,IANI,CAMEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANX,CAAP;AAOD;AAED,OAAO,SAASC,2BAAT,CAAqCC,IAArC,EAA2C;AAChDf,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDc,IAAlD;AACA,QAAMC,WAAW,GAAG,IAAIC,WAAJ,CAClBd,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,UAAhC,GAA6CU,IAD3B,CAApB;AAIA,SAAOC,WAAP;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACC","sourcesContent":["export function createOrder(order) {\n  console.log(\"order: \", order);\n  return fetch(process.env.REACT_APP_API_URL + \"/order\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(order),\n  }).then((data) => data.json());\n}\n\nexport function listenSSEReceiveBigImageUrl(memo) {\n  console.log(\"listenSSEReceiveBigImageUrl memo: \", memo);\n  const eventSource = new EventSource(\n    process.env.REACT_APP_API_URL + \"/stream/\" + memo\n  );\n\n  return eventSource;\n  /*\n  const handleReceiveSSEMessageLocal = (event) => {\n    console.log(\"handleReceiveSSEMessage: \", event);\n    //const eventData = JSON.parse(event.data);\n    //setBigImageUrl(event.data);\n    handleReceiveMessage(event);\n    eventSource.removeEventListener(\"message\", handleReceiveSSEMessageLocal);\n    eventSource.close();\n  };\n  */\n\n  /*\n  eventSource.removeEventListener(\"message\", handleReceiveMessage);\n  eventSource.close();\n  eventSource.addEventListener(\"message\", handleReceiveMessage);\n  */\n  /*\n  return () => {\n    // Remove event listener and close the connection on unmount\n    console.log(\"before removeEventListener\");\n    eventSource.removeEventListener(\"message\", handleReceiveMessage);\n    eventSource.close();\n  };\n  */\n}\n"]},"metadata":{},"sourceType":"module"}