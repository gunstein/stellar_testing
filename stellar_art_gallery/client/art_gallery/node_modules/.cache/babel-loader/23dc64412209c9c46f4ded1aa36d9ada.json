{"ast":null,"code":"import StellarSdk from \"stellar-sdk\";\nexport function createAccount() {\n  const pair = StellarSdk.Keypair.random();\n  /*\n  console.log(\"publickey\", pair.publicKey());\n  console.log(\"secret\", pair.secret());\n  console.log(\"created pair: \", pair);\n  //Fund account. (This only works for the stellar test network)\n  return Promise.resolve({\n    publickey: pair.publicKey(),\n    secret: pair.secret(),\n  });\n  */\n\n  return fetch(`https://friendbot.stellar.org?addr=${encodeURIComponent(pair.publicKey())}`, {\n    mode: \"no-cors\"\n  }).then(function (fund_account_response) {\n    return {\n      publickey: pair.publicKey(),\n      secret: pair.secret()\n    };\n  }).catch(function (error) {\n    console.log(\"Failed!\", error);\n  });\n}\nexport function getAccountBalance(account) {\n  return fetch(`https://horizon.stellar.org/accounts/${encodeURIComponent(account)}`).then(function (account) {\n    console.log(account);\n    return {\n      balance: account.balances[0].balance\n    };\n  }).catch(function (error) {\n    console.log(\"Failed!\", error);\n  });\n}","map":{"version":3,"sources":["/home/gunstein/koding/stellar_testing/stellar_art_gallery/client/art_gallery/src/services/stellar.js"],"names":["StellarSdk","createAccount","pair","Keypair","random","fetch","encodeURIComponent","publicKey","mode","then","fund_account_response","publickey","secret","catch","error","console","log","getAccountBalance","account","balance","balances"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,QAAMC,IAAI,GAAGF,UAAU,CAACG,OAAX,CAAmBC,MAAnB,EAAb;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,SAAOC,KAAK,CACT,sCAAqCC,kBAAkB,CACtDJ,IAAI,CAACK,SAAL,EADsD,CAEtD,EAHQ,EAIV;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAJU,CAAL,CAMJC,IANI,CAMC,UAAUC,qBAAV,EAAiC;AACrC,WAAO;AACLC,MAAAA,SAAS,EAAET,IAAI,CAACK,SAAL,EADN;AAELK,MAAAA,MAAM,EAAEV,IAAI,CAACU,MAAL;AAFH,KAAP;AAID,GAXI,EAYJC,KAZI,CAYE,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACD,GAdI,CAAP;AAeD;AAED,OAAO,SAASG,iBAAT,CAA2BC,OAA3B,EAAoC;AACzC,SAAOb,KAAK,CACT,wCAAuCC,kBAAkB,CAACY,OAAD,CAAU,EAD1D,CAAL,CAGJT,IAHI,CAGC,UAAUS,OAAV,EAAmB;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,WAAO;AAAEC,MAAAA,OAAO,EAAED,OAAO,CAACE,QAAR,CAAiB,CAAjB,EAAoBD;AAA/B,KAAP;AACD,GANI,EAOJN,KAPI,CAOE,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACD,GATI,CAAP;AAUD","sourcesContent":["import StellarSdk from \"stellar-sdk\";\n\nexport function createAccount() {\n  const pair = StellarSdk.Keypair.random();\n  /*\n  console.log(\"publickey\", pair.publicKey());\n  console.log(\"secret\", pair.secret());\n  console.log(\"created pair: \", pair);\n  //Fund account. (This only works for the stellar test network)\n  return Promise.resolve({\n    publickey: pair.publicKey(),\n    secret: pair.secret(),\n  });\n  */\n\n  return fetch(\n    `https://friendbot.stellar.org?addr=${encodeURIComponent(\n      pair.publicKey()\n    )}`,\n    { mode: \"no-cors\" }\n  )\n    .then(function (fund_account_response) {\n      return {\n        publickey: pair.publicKey(),\n        secret: pair.secret(),\n      };\n    })\n    .catch(function (error) {\n      console.log(\"Failed!\", error);\n    });\n}\n\nexport function getAccountBalance(account) {\n  return fetch(\n    `https://horizon.stellar.org/accounts/${encodeURIComponent(account)}`\n  )\n    .then(function (account) {\n      console.log(account);\n      return { balance: account.balances[0].balance };\n    })\n    .catch(function (error) {\n      console.log(\"Failed!\", error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}