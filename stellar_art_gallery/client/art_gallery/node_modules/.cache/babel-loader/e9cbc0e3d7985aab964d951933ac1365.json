{"ast":null,"code":"import StellarSdk from \"stellar-sdk\";\nexport async function createAccount() {\n  const pair = StellarSdk.Keypair.random();\n\n  try {\n    const response = await fetch(`https://friendbot.stellar.org?addr=${encodeURIComponent(pair.publicKey())}`);\n    const responseJSON = await response.json();\n    console.log(\"SUCCESS! You have a new account :)\\n\", responseJSON);\n    return pair;\n  } catch (e) {\n    console.error(\"ERROR!\", e);\n  }\n}\nexport async function getAccountBalance(account) {\n  const server = new StellarSdk.Server(\"https://horizon-testnet.stellar.org\");\n  const account_response = await server.loadAccount(account);\n  return {\n    balance: account_response.balances[0].balance\n  };\n}","map":{"version":3,"sources":["/home/gunstein/koding/stellar_testing/stellar_art_gallery/client/art_gallery/src/services/stellar.js"],"names":["StellarSdk","createAccount","pair","Keypair","random","response","fetch","encodeURIComponent","publicKey","responseJSON","json","console","log","e","error","getAccountBalance","account","server","Server","account_response","loadAccount","balance","balances"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,OAAO,eAAeC,aAAf,GAA+B;AACpC,QAAMC,IAAI,GAAGF,UAAU,CAACG,OAAX,CAAmBC,MAAnB,EAAb;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,sCAAqCC,kBAAkB,CACtDL,IAAI,CAACM,SAAL,EADsD,CAEtD,EAHwB,CAA5B;AAKA,UAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDH,YAApD;AACA,WAAOP,IAAP;AACD,GATD,CASE,OAAOW,CAAP,EAAU;AACVF,IAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBD,CAAxB;AACD;AACF;AAED,OAAO,eAAeE,iBAAf,CAAiCC,OAAjC,EAA0C;AAC/C,QAAMC,MAAM,GAAG,IAAIjB,UAAU,CAACkB,MAAf,CAAsB,qCAAtB,CAAf;AACA,QAAMC,gBAAgB,GAAG,MAAMF,MAAM,CAACG,WAAP,CAAmBJ,OAAnB,CAA/B;AACA,SAAO;AAAEK,IAAAA,OAAO,EAAEF,gBAAgB,CAACG,QAAjB,CAA0B,CAA1B,EAA6BD;AAAxC,GAAP;AACD","sourcesContent":["import StellarSdk from \"stellar-sdk\";\n\nexport async function createAccount() {\n  const pair = StellarSdk.Keypair.random();\n  try {\n    const response = await fetch(\n      `https://friendbot.stellar.org?addr=${encodeURIComponent(\n        pair.publicKey()\n      )}`\n    );\n    const responseJSON = await response.json();\n    console.log(\"SUCCESS! You have a new account :)\\n\", responseJSON);\n    return pair;\n  } catch (e) {\n    console.error(\"ERROR!\", e);\n  }\n}\n\nexport async function getAccountBalance(account) {\n  const server = new StellarSdk.Server(\"https://horizon-testnet.stellar.org\");\n  const account_response = await server.loadAccount(account);\n  return { balance: account_response.balances[0].balance };\n}\n"]},"metadata":{},"sourceType":"module"}