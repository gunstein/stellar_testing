{"ast":null,"code":"import StellarSdk from \"stellar-sdk\";\nexport function createAccount() {\n  const pair = StellarSdk.Keypair.random(); //Fund account. (This only works for the stellar test network)\n\n  return fetch(`https://friendbot.stellar.org?addr=${encodeURIComponent(pair.publicKey())}`, {\n    mode: \"no-cors\"\n  }).then(function (data) {\n    console.log(data);\n    return pair; //only interested in the pair\n  }).catch(function (error) {\n    console.log(\"Failed!\", error);\n  });\n}\nexport function getAccountBalance(account) {\n  return fetch(`https://horizon.stellar.org/accounts/${encodeURIComponent(account)}`).then(function (account) {\n    console.log(account);\n    return {\n      balance: account.balances[0].balance\n    };\n  }).catch(function (error) {\n    console.log(\"Failed!\", error);\n  });\n}","map":{"version":3,"sources":["/home/gunstein/koding/stellar_testing/stellar_art_gallery/client/art_gallery/src/services/stellar.js"],"names":["StellarSdk","createAccount","pair","Keypair","random","fetch","encodeURIComponent","publicKey","mode","then","data","console","log","catch","error","getAccountBalance","account","balance","balances"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,QAAMC,IAAI,GAAGF,UAAU,CAACG,OAAX,CAAmBC,MAAnB,EAAb,CAD8B,CAE9B;;AACA,SAAOC,KAAK,CACT,sCAAqCC,kBAAkB,CACtDJ,IAAI,CAACK,SAAL,EADsD,CAEtD,EAHQ,EAIV;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAJU,CAAL,CAMJC,IANI,CAMC,UAAUC,IAAV,EAAgB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAOR,IAAP,CAFoB,CAEP;AACd,GATI,EAUJW,KAVI,CAUE,UAAUC,KAAV,EAAiB;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AACD,GAZI,CAAP;AAaD;AAED,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;AACzC,SAAOX,KAAK,CACT,wCAAuCC,kBAAkB,CAACU,OAAD,CAAU,EAD1D,CAAL,CAGJP,IAHI,CAGC,UAAUO,OAAV,EAAmB;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,WAAO;AAAEC,MAAAA,OAAO,EAAED,OAAO,CAACE,QAAR,CAAiB,CAAjB,EAAoBD;AAA/B,KAAP;AACD,GANI,EAOJJ,KAPI,CAOE,UAAUC,KAAV,EAAiB;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AACD,GATI,CAAP;AAUD","sourcesContent":["import StellarSdk from \"stellar-sdk\";\n\nexport function createAccount() {\n  const pair = StellarSdk.Keypair.random();\n  //Fund account. (This only works for the stellar test network)\n  return fetch(\n    `https://friendbot.stellar.org?addr=${encodeURIComponent(\n      pair.publicKey()\n    )}`,\n    { mode: \"no-cors\" }\n  )\n    .then(function (data) {\n      console.log(data);\n      return pair; //only interested in the pair\n    })\n    .catch(function (error) {\n      console.log(\"Failed!\", error);\n    });\n}\n\nexport function getAccountBalance(account) {\n  return fetch(\n    `https://horizon.stellar.org/accounts/${encodeURIComponent(account)}`\n  )\n    .then(function (account) {\n      console.log(account);\n      return { balance: account.balances[0].balance };\n    })\n    .catch(function (error) {\n      console.log(\"Failed!\", error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}