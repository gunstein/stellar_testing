{"ast":null,"code":"import StellarSdk from \"stellar-sdk\";\nexport function createAccount() {\n  const pair = StellarSdk.Keypair.random();\n  console.log(\"publickey\", pair.publickey());\n  console.log(\"secret\", pair.secret());\n  console.log(\"created pair: \", pair); //Fund account. (This only works for the stellar test network)\n\n  return Promise.resolve({\n    publickey: pair.publickey(),\n    secret: pair.secret()\n  });\n  /*\n  return fetch(\n    `https://friendbot.stellar.org?addr=${encodeURIComponent(\n      pair.publicKey()\n    )}`,\n    { mode: \"no-cors\" }\n  )\n    .then(function (fund_account_response) {\n      console.log(\"fund_account_response\", fund_account_response);\n      console.log(pair);\n      return pair;\n    })\n    .catch(function (error) {\n      console.log(\"Failed!\", error);\n    });*/\n}\nexport function getAccountBalance(account) {\n  return fetch(`https://horizon.stellar.org/accounts/${encodeURIComponent(account)}`).then(function (account) {\n    console.log(account);\n    return {\n      balance: account.balances[0].balance\n    };\n  }).catch(function (error) {\n    console.log(\"Failed!\", error);\n  });\n}","map":{"version":3,"sources":["/home/gunstein/koding/stellar_testing/stellar_art_gallery/client/art_gallery/src/services/stellar.js"],"names":["StellarSdk","createAccount","pair","Keypair","random","console","log","publickey","secret","Promise","resolve","getAccountBalance","account","fetch","encodeURIComponent","then","balance","balances","catch","error"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,QAAMC,IAAI,GAAGF,UAAU,CAACG,OAAX,CAAmBC,MAAnB,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,IAAI,CAACK,SAAL,EAAzB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,IAAI,CAACM,MAAL,EAAtB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,IAA9B,EAJ8B,CAK9B;;AACA,SAAOO,OAAO,CAACC,OAAR,CAAgB;AACrBH,IAAAA,SAAS,EAAEL,IAAI,CAACK,SAAL,EADU;AAErBC,IAAAA,MAAM,EAAEN,IAAI,CAACM,MAAL;AAFa,GAAhB,CAAP;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AAED,OAAO,SAASG,iBAAT,CAA2BC,OAA3B,EAAoC;AACzC,SAAOC,KAAK,CACT,wCAAuCC,kBAAkB,CAACF,OAAD,CAAU,EAD1D,CAAL,CAGJG,IAHI,CAGC,UAAUH,OAAV,EAAmB;AACvBP,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACA,WAAO;AAAEI,MAAAA,OAAO,EAAEJ,OAAO,CAACK,QAAR,CAAiB,CAAjB,EAAoBD;AAA/B,KAAP;AACD,GANI,EAOJE,KAPI,CAOE,UAAUC,KAAV,EAAiB;AACtBd,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBa,KAAvB;AACD,GATI,CAAP;AAUD","sourcesContent":["import StellarSdk from \"stellar-sdk\";\n\nexport function createAccount() {\n  const pair = StellarSdk.Keypair.random();\n  console.log(\"publickey\", pair.publickey());\n  console.log(\"secret\", pair.secret());\n  console.log(\"created pair: \", pair);\n  //Fund account. (This only works for the stellar test network)\n  return Promise.resolve({\n    publickey: pair.publickey(),\n    secret: pair.secret(),\n  });\n  /*\n  return fetch(\n    `https://friendbot.stellar.org?addr=${encodeURIComponent(\n      pair.publicKey()\n    )}`,\n    { mode: \"no-cors\" }\n  )\n    .then(function (fund_account_response) {\n      console.log(\"fund_account_response\", fund_account_response);\n      console.log(pair);\n      return pair;\n    })\n    .catch(function (error) {\n      console.log(\"Failed!\", error);\n    });*/\n}\n\nexport function getAccountBalance(account) {\n  return fetch(\n    `https://horizon.stellar.org/accounts/${encodeURIComponent(account)}`\n  )\n    .then(function (account) {\n      console.log(account);\n      return { balance: account.balances[0].balance };\n    })\n    .catch(function (error) {\n      console.log(\"Failed!\", error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}